openapi: 3.0.3
info:
  title: Example Widgets API
  version: 1.0.0
  description: Simple example API demonstrating the toolkit's validation rules.
  contact:
    name: API Support
    email: support@example.com
servers:
  - url: https://api.example.com/v1
tags:
  - name: widgets
    description: Operations related to widgets.
security:
  - bearerAuth: []
paths:
  /widgets:
    get:
      tags: [widgets]
      operationId: listWidgets
      summary: List widgets
      description: Returns a paginated list of widgets.
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: page
          description: Page number (1-based)
          schema: { type: integer, format: int32, minimum: 1, maximum: 1000 }
        - in: query
          name: size
          description: Page size
          schema: { type: integer, format: int32, minimum: 1, maximum: 100 }
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Widget'
              example:
                - id: "w_123"
                  name: "Gizmo"
                  createdAt: "2024-01-01T12:00:00Z"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailDto'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailDto'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
  schemas:
    Widget:
      type: object
      description: Widget resource.
      additionalProperties: false
      properties:
        id:
          type: string
          description: Widget identifier
          example: "w_123"
        name:
          type: string
          description: Human-friendly name
          example: Gizmo
        createdAt:
          type: string
          format: date-time
          description: Creation timestamp (UTC)
          example: "2024-01-01T12:00:00Z"
      example:
        id: "w_123"
        name: Gizmo
        createdAt: "2024-01-01T12:00:00Z"
    ProblemDetailDto:
      type: object
      description: RFC 7807 Problem Details
      required: [type, title, status]
      additionalProperties: false
      properties:
        type:
          type: string
          format: uri
          description: A URI reference that identifies the problem type.
          example: https://example.com/problems/forbidden
        title:
          type: string
          description: A short, human-readable summary of the problem type.
          example: Forbidden
        detail:
          type: string
          description: A human-readable explanation specific to this occurrence of the problem.
          example: You do not have access to this resource.
        status:
          type: integer
          format: int32
          description: HTTP status code generated by the origin server.
          minimum: 400
          maximum: 599
          example: 403
        instance:
          type: string
          format: uri
          description: A URI reference that identifies the specific occurrence of the problem.
          example: https://api.example.com/v1/widgets/w_123
      example:
        type: https://example.com/problems/forbidden
        title: Forbidden
        detail: You do not have access to this resource.
        status: 403
        instance: https://api.example.com/v1/widgets/w_123
