/**
 * Render a human-friendly HTML report for grading results.
 * @param {object} report - Summary produced in grade-report.json
 * @param {Array} spectralItems - Raw Spectral findings (array) if available
 * @param {Array} redoclyItems - Raw Redocly findings (array) if available
 * @returns {string} HTML string
 */
export function renderGradeHtml(report, spectralItems = [], redoclyItems = []) {
  const esc = (s) => {
    let str = String(s ?? '');
    str = str.replaceAll('&', '&amp;');
    str = str.replaceAll('<', '&lt;');
    str = str.replaceAll('>', '&gt;');
    return str;
  };
  const fmtPct = (n) => (typeof n === 'number') ? `${Math.round(n * 100)}%` : '';

  const { score, letter, spectral, redocly, heuristics } = report;
  const hasSpectral = Array.isArray(spectralItems) && spectralItems.length > 0;
  const hasRedocly = Array.isArray(redoclyItems) && redoclyItems.length > 0;

  const normSpectral = (hasSpectral ? spectralItems : []).map(it => {
    let sev;
    if (typeof it.severity === 'string') {
      sev = it.severity;
    } else if (it.severity === 0) {
      sev = 'error';
    } else if (it.severity === 1) {
      sev = 'warn';
    } else {
      sev = 'info';
    }
    // Spectral paths like ["paths","/ping","get","responses","200"]
    const path = Array.isArray(it.path) ? it.path.join('.') : (it.path ?? '');
    const range = it.range ? `${it.range.start?.line ?? ''}:${it.range.start?.character ?? ''}` : '';
    return { severity: sev, code: it.code, message: it.message, path, where: range };
  });

  const normRedocly = (hasRedocly ? redoclyItems : []).map(it => {
    let sev;
    if (typeof it.severity === 'string') {
      sev = it.severity;
    } else if (it.severity === 0) {
      sev = 'error';
    } else if (it.severity === 1) {
      sev = 'warn';
    } else {
      sev = 'info';
    }
    const path = Array.isArray(it.location?.[0]?.path) ? it.location[0].path.join('.') : (it.path ?? '');
    return { severity: sev, code: it.ruleId || it.code, message: it.message, path, where: '' };
  });

  const rows = (arr) => arr.map(r => `
      <tr class="sev-${esc(r.severity)}">
        <td>${esc(r.severity)}</td>
        <td>${esc(r.code ?? '')}</td>
        <td>${esc(r.message ?? '')}</td>
        <td>${esc(r.path ?? '')}</td>
        <td>${esc(r.where ?? '')}</td>
      </tr>`).join('');

  const heur = heuristics || {};
  const ratios = heur.ratios || {};
  const presence = heur.presence || {};

  return `<!doctype html>
  <html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>OpenAPI Grade Report</title>
    <style>
      :root { --bg:#0f172a; --fg:#e2e8f0; --muted:#94a3b8; --ok:#22c55e; --warn:#f59e0b; --err:#ef4444; --card:#111827; }
      body { margin:0; font-family: ui-sans-serif, system-ui, -apple-system, Segoe UI, Roboto, Helvetica, Arial, "Apple Color Emoji", "Segoe UI Emoji"; background: var(--bg); color: var(--fg); }
      .wrap { max-width: 1100px; margin: 0 auto; padding: 24px; }
      h1 { font-size: 1.6rem; margin: 0 0 8px; }
      .muted { color: var(--muted); }
      .card { background: var(--card); border: 1px solid #1f2937; border-radius: 10px; padding: 16px; margin: 16px 0; }
      .grid { display: grid; grid-template-columns: repeat(12, 1fr); gap: 12px; }
      .span4 { grid-column: span 4; }
      .span6 { grid-column: span 6; }
      .span12 { grid-column: span 12; }
      .score { font-size: 2.2rem; font-weight: 700; }
      .badge { display:inline-block; padding: 2px 8px; border-radius: 999px; font-weight:600; }
      .badge.letter { background:#0b3756; color:#8bd5ff; }
      .badge.err { background: #2a1313; color: var(--err); }
      .badge.warn { background: #2a2213; color: var(--warn); }
      table { width: 100%; border-collapse: collapse; font-size: 0.92rem; }
      th, td { border-bottom: 1px solid #223046; text-align: left; padding: 8px; vertical-align: top; }
      thead th { position: sticky; top: 0; background: #0b1220; }
      tr:hover { background: #0b1220; }
      .sev-error td { border-left: 4px solid var(--err); }
      .sev-warn td, .sev-warning td { border-left: 4px solid var(--warn); }
      .kvs { display:flex; flex-wrap:wrap; gap:8px 16px; }
      .kv { min-width: 160px; }
      .kv .k { display:block; font-size:0.8rem; color: var(--muted); }
      .kv .v { display:block; font-weight:600; }
      .small { font-size: 0.9rem; }
      .footer { color: var(--muted); font-size: 0.85rem; margin-top: 24px; }
      code { background:#0b1220; padding:2px 6px; border-radius:6px; }
    </style>
  </head>
  <body>
    <div class="wrap">
      <h1>OpenAPI Grade Report</h1>
      <div class="muted small">Generated by openapi-anyenv-suite</div>

      <div class="card grid">
        <div class="span4">
          <div class="kvs">
            <div class="kv"><span class="k">Numeric Score</span><span class="v score">${esc(score)}</span></div>
            <div class="kv"><span class="k">Letter</span><span class="v"><span class="badge letter">${esc(letter)}</span></span></div>
          </div>
        </div>
        <div class="span4">
          <div class="kvs">
            <div class="kv"><span class="k">Spectral Errors</span><span class="v"><span class="badge err">${esc(spectral?.errors ?? 0)}</span></span></div>
            <div class="kv"><span class="k">Spectral Warnings</span><span class="v"><span class="badge warn">${esc(spectral?.warnings ?? 0)}</span></span></div>
          </div>
        </div>
        <div class="span4">
          <div class="kvs">
            <div class="kv"><span class="k">Redocly Errors</span><span class="v"><span class="badge err">${esc(redocly?.errors ?? 0)}</span></span></div>
            <div class="kv"><span class="k">Redocly Warnings</span><span class="v"><span class="badge warn">${esc(redocly?.warnings ?? 0)}</span></span></div>
          </div>
        </div>
      </div>

      <div class="card">
        <h2 class="small" style="margin:0 0 8px">Heuristics</h2>
        <div class="kvs">
          <div class="kv"><span class="k">Operations</span><span class="v">${esc(heur?.totals?.operations ?? 0)}</span></div>
          <div class="kv"><span class="k">Summaries</span><span class="v">${fmtPct(ratios.withSummary)}</span></div>
          <div class="kv"><span class="k">Descriptions</span><span class="v">${fmtPct(ratios.withDesc)}</span></div>
          <div class="kv"><span class="k">Has 4xx</span><span class="v">${fmtPct(ratios.with4xx)}</span></div>
          <div class="kv"><span class="k">OpId Uniqueness</span><span class="v">${fmtPct(ratios.opIdUniqueRatio)}</span></div>
          <div class="kv"><span class="k">Title</span><span class="v">${presence.hasTitle ? 'Yes' : 'No'}</span></div>
          <div class="kv"><span class="k">Version</span><span class="v">${presence.hasVersion ? 'Yes' : 'No'}</span></div>
          <div class="kv"><span class="k">Servers</span><span class="v">${presence.hasServers ? 'Yes' : 'No'}</span></div>
          <div class="kv"><span class="k">Security Schemes</span><span class="v">${presence.hasSecSchemes ? 'Yes' : 'No'}</span></div>
          <div class="kv"><span class="k">Bonus</span><span class="v">${esc(heur?.bonus ?? 0)}</span></div>
        </div>
      </div>

      ${hasSpectral ? `
      <div class="card">
        <h2 class="small" style="margin:0 0 8px">Spectral Findings</h2>
        <div class="small muted" style="margin-bottom:8px">${esc(spectral?.errors ?? 0)} errors, ${esc(spectral?.warnings ?? 0)} warnings</div>
        <div style="max-height: 420px; overflow:auto;">
          <table>
            <thead><tr><th>Severity</th><th>Code</th><th>Message</th><th>Path</th><th>Where</th></tr></thead>
            <tbody>
              ${rows(normSpectral)}
            </tbody>
          </table>
        </div>
      </div>` : ''}

      ${hasRedocly ? `
      <div class="card">
        <h2 class="small" style="margin:0 0 8px">Redocly Findings</h2>
        <div class="small muted" style="margin-bottom:8px">${esc(redocly?.errors ?? 0)} errors, ${esc(redocly?.warnings ?? 0)} warnings</div>
        <div style="max-height: 420px; overflow:auto;">
          <table>
            <thead><tr><th>Severity</th><th>Rule</th><th>Message</th><th>Path</th><th>Where</th></tr></thead>
            <tbody>
              ${rows(normRedocly)}
            </tbody>
          </table>
        </div>
      </div>` : ''}

      <div class="footer">Sources: <code>dist/grade-report.json</code>${hasSpectral ? ', Spectral JSON' : ''}${hasRedocly ? ', Redocly JSON' : ''}</div>
    </div>
  </body>
  </html>`;
}
