name: Docker Smoke Test (GHCR)

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "Image tag to pull from GHCR"
        required: false
        default: "latest"
  workflow_run:
    workflows: ["Docker Build & Publish (GHCR)"]
    types: [completed]

jobs:
  smoke:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
    env:
      REGISTRY: ghcr.io
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Resolve image tag (input or latest)
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ] && [ -n "${{ inputs.tag }}" ]; then
            echo "IMAGE=ghcr.io/${{ github.repository }}:${{ inputs.tag }}" >> $GITHUB_ENV
          else
            echo "IMAGE=ghcr.io/${{ github.repository }}:latest" >> $GITHUB_ENV
          fi

      - name: Read package version
        run: |
          echo "IMAGE_VERSION=ghcr.io/${{ github.repository }}:v$(jq -r .version package.json)" >> $GITHUB_ENV

      - name: Check version tag availability (retry)
        run: |
          for i in {1..10}; do
            if docker manifest inspect "$IMAGE_VERSION" >/dev/null 2>&1; then
              echo "HAS_VERSION=true" >> $GITHUB_ENV
              echo "Found version tag: $IMAGE_VERSION"
              exit 0
            fi
            echo "Waiting for $IMAGE_VERSION to become available... ($i/10)"
            sleep 12
          done
          echo "HAS_VERSION=false" >> $GITHUB_ENV
          echo "Version tag not available; will skip version-tag smoke steps."

      - name: Show image references
        run: |
          echo "Image (resolved): $IMAGE"
          echo "Image (version):  $IMAGE_VERSION"

      - name: Login to GHCR (optional)
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull image
        run: docker pull "$IMAGE"

      - name: Validate example using container
        run: |
          mkdir -p dist
          docker run --rm \
            -v "${{ github.workspace }}/example:/spec:ro" \
            -v "${{ github.workspace }}/dist:/work/dist" \
            "$IMAGE" \
              pnpm run check -- /spec/openapi.yaml

      - name: Grade example using container
        run: |
          docker run --rm \
            -e SCHEMA_LINT=1 \
            -v "${{ github.workspace }}/example:/spec:ro" \
            -v "${{ github.workspace }}/dist:/work/dist" \
            "$IMAGE" \
            SCHEMA_LINT=1 pnpm run check -- /spec/openapi.yaml

      - name: Check grade report exists
        run: |
          test -f dist/grade-report.json
          echo "Grade report present."
          head -n 50 dist/grade-report.json || true

      - name: Upload smoke artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: docker-smoke-out
          path: |
            dist/grade-report.json
            dist/bundled-*

      - name: Pull image (version tag)
        if: env.HAS_VERSION == 'true'
        run: docker pull "$IMAGE_VERSION"

      - name: Validate example using container (version tag)
        if: env.HAS_VERSION == 'true'
        run: |
          mkdir -p dist
          docker run --rm \
            -v "${{ github.workspace }}/example:/spec:ro" \
            -v "${{ github.workspace }}/dist:/work/dist" \
            "$IMAGE_VERSION" \
              pnpm run check -- /spec/openapi.yaml

      - name: Grade example using container (version tag)
        if: env.HAS_VERSION == 'true'
        run: |
          docker run --rm \
            -e SCHEMA_LINT=1 \
            -v "${{ github.workspace }}/example:/spec:ro" \
            -v "${{ github.workspace }}/dist:/work/dist" \
            "$IMAGE_VERSION" \
            SCHEMA_LINT=1 pnpm run check -- /spec/openapi.yaml

      - name: Check grade report exists (version tag)
        if: env.HAS_VERSION == 'true'
        run: |
          test -f dist/grade-report.json
          echo "Grade report present (version tag)."
          head -n 50 dist/grade-report.json || true

      - name: Upload smoke artifacts (version tag)
        if: always() && env.HAS_VERSION == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: docker-smoke-out-version
          path: |
            dist/grade-report.json
            dist/bundled-*
