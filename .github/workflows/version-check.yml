name: Version Check

on:
  pull_request:
    branches: [ master, main ]

jobs:
  ensure-version-bumped:
    runs-on: ubuntu-latest
    steps:
      - name: Check labels via API (current state)
        id: labels
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -e
          url="https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}"
          names=$(curl -sSL -H "Authorization: Bearer $GH_TOKEN" -H "Accept: application/vnd.github+json" "$url" | jq -r '.labels[].name')
          echo "names<<EOF" >> $GITHUB_OUTPUT
          echo "$names" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Skip if release label present
        id: skip_by_label
        run: |
          if echo "${{ steps.labels.outputs.names }}" | grep -E '^(release:(major|minor|patch)|auto-version)$' >/dev/null 2>&1; then
            echo "skip=true" >> $GITHUB_OUTPUT
          else
            echo "skip=false" >> $GITHUB_OUTPUT
          fi

      - name: Exit early (release label)
        if: ${{ steps.skip_by_label.outputs.skip == 'true' }}
        run: |
          echo "Version check skipped: release label present"

      - name: Comment on PR (release label present)
        if: ${{ steps.skip_by_label.outputs.skip == 'true' }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          body=$(cat << 'EOF'
          Version check skipped: a release label is present.

          The auto-version workflow will bump the version on merge into master based on this label.

          Labels detected:
          
          ```
          ${{ steps.labels.outputs.names }}
          ```
          EOF
          )
          curl -sS -X POST -H "Authorization: Bearer $GH_TOKEN" -H "Accept: application/vnd.github+json" \
            "https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/comments" \
            -d "$(jq -nc --arg b "$body" '{body:$b}')" >/dev/null

      - name: Infer bump from title/commits (conventional commits)
        if: ${{ steps.skip_by_label.outputs.skip != 'true' }}
        id: infer
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO: ${{ github.repository }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
        run: |
          set -e
          TYPE=minor
          TITLE='${{ github.event.pull_request.title }}'
          TITLE_LC=$(echo "$TITLE" | tr '[:upper:]' '[:lower:]')
          if echo "$TITLE" | grep -qE 'BREAKING CHANGE|!'; then TYPE=major; fi
          if echo "$TITLE_LC" | grep -q '^feat'; then TYPE=minor; fi
          COMMITS=$(curl -sSL -H "Authorization: Bearer $GH_TOKEN" -H "Accept: application/vnd.github+json" \
            "https://api.github.com/repos/$REPO/pulls/$PR_NUMBER/commits")
          MSGS=$(echo "$COMMITS" | jq -r '.[].commit.message')
          if echo "$MSGS" | grep -qE 'BREAKING CHANGE|!'; then TYPE=major; fi
          echo "type=$TYPE" >> $GITHUB_OUTPUT
          echo "inferred=true" >> $GITHUB_OUTPUT

      - name: Exit early (auto-version will bump based on inference)
        if: ${{ steps.skip_by_label.outputs.skip != 'true' && steps.infer.outputs.inferred == 'true' }}
        run: |
          echo "Version check skipped: auto-version will bump (${{ steps.infer.outputs.type }})"

      - name: Comment on PR (inferred bump)
        if: ${{ steps.skip_by_label.outputs.skip != 'true' && steps.infer.outputs.inferred == 'true' }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          body=$(cat << 'EOF'
          Version check skipped: auto-version will bump the package on merge into master.

          Inferred bump type (Conventional Commits): `${{ steps.infer.outputs.type }}`.

          If you prefer a different bump, apply one of these labels to the PR:
          - `release:patch`
          - `release:minor`
          - `release:major`
          EOF
          )
          curl -sS -X POST -H "Authorization: Bearer $GH_TOKEN" -H "Accept: application/vnd.github+json" \
            "https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/comments" \
            -d "$(jq -nc --arg b "$body" '{body:$b}')" >/dev/null


      - name: Checkout
        if: ${{ steps.skip_by_label.outputs.skip != 'true' && steps.infer.outputs.inferred != 'true' }}
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get base and head package.json
        if: ${{ steps.skip_by_label.outputs.skip != 'true' && steps.infer.outputs.inferred != 'true' }}
        id: ver
        run: |
          base_ref="${{ github.event.pull_request.base.sha }}"
          head_ref="${{ github.event.pull_request.head.sha }}"
          git show "$base_ref:package.json" > /tmp/base.package.json || echo '{}' > /tmp/base.package.json
          cat package.json > /tmp/head.package.json
          echo "base=$(jq -r '.version // ""' /tmp/base.package.json)" >> $GITHUB_OUTPUT
          echo "head=$(jq -r '.version // ""' /tmp/head.package.json)" >> $GITHUB_OUTPUT

      - name: Check version bump
        if: ${{ steps.skip_by_label.outputs.skip != 'true' && steps.infer.outputs.inferred != 'true' }}
        run: |
          echo "Base version: ${{ steps.ver.outputs.base }}"
          echo "Head version: ${{ steps.ver.outputs.head }}"
          if [ "${{ steps.ver.outputs.base }}" = "${{ steps.ver.outputs.head }}" ]; then
            echo "Version not bumped in package.json. Please run 'npm version <patch|minor|major>'" >&2
            exit 1
          fi
