name: Docker Build & Publish (GHCR)

on:
  workflow_dispatch:
    inputs:
      push:
        description: 'Push image to GHCR'
        required: false
        default: 'true'
      tag:
        description: 'Override tag (defaults to ref or latest)'
        required: false
        default: ''
  push:
    tags:
      - 'v*'
    branches:
      - master
      - main
  release:
    types: [published]

jobs:
  docker:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write    # required for GHCR push
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up pnpm
        uses: pnpm/action-setup@v3
        with:
          version: '9'
      - name: Read package version
        id: pkg
        run: echo "version=$(jq -r .version package.json)" >> $GITHUB_OUTPUT

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=tag
            type=ref,event=branch
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value=${{ github.event.inputs.tag }},enable=${{ github.event.inputs.tag != '' }}
            type=raw,value=v${{ steps.pkg.outputs.version }},enable=true

      - name: Detect version bump (branch pushes)
        id: bump
        if: ${{ startsWith(github.ref, 'refs/heads/') }}
        run: |
          set -e
          BASE=$(git rev-parse HEAD^ || echo "")
          if [ -z "$BASE" ]; then echo "bumped=true" >> $GITHUB_OUTPUT; exit 0; fi
          git show "$BASE:package.json" > /tmp/base.package.json || echo '{}' > /tmp/base.package.json
          CURR=$(node -p "require('./package.json').version")
          PREV=$(node -e "console.log(require('/tmp/base.package.json').version||'')")
          echo "Previous version: $PREV"
          echo "Current  version: $CURR"
          if [ "$CURR" != "$PREV" ] && [ -n "$CURR" ]; then
            echo "bumped=true" >> $GITHUB_OUTPUT
          else
            echo "bumped=false" >> $GITHUB_OUTPUT
          fi

      - name: Build and (optionally) push
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name == 'release' || startsWith(github.ref, 'refs/tags/') || github.event.inputs.push == 'true' || steps.bump.outputs.bumped == 'true' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:buildcache
          cache-to: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:buildcache,mode=max

      - name: Summary
        run: |
          echo "Pushed: ${{ github.event_name == 'release' || startsWith(github.ref, 'refs/tags/') || github.event.inputs.push == 'true' || github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main' }}" >> $GITHUB_STEP_SUMMARY
          echo "Tags:" >> $GITHUB_STEP_SUMMARY
          echo "${{ steps.meta.outputs.tags }}" >> $GITHUB_STEP_SUMMARY
          echo "\nPull with version tag (recommended):" >> $GITHUB_STEP_SUMMARY
          echo "docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:v${{ steps.pkg.outputs.version }}" >> $GITHUB_STEP_SUMMARY
