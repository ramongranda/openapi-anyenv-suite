name: Publish to npm

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Determine eligibility (only master tags or manual)
        id: elig
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "publish=true" >> $GITHUB_OUTPUT
            echo "Manual dispatch: will publish" >> $GITHUB_STEP_SUMMARY
            exit 0
          fi
          git fetch --no-tags origin +refs/heads/master:refs/remotes/origin/master
          # For tag pushes: ensure the tagged commit is contained in master
          if git merge-base --is-ancestor "$GITHUB_SHA" origin/master; then
            echo "publish=true" >> $GITHUB_OUTPUT
            echo "Tag commit is contained in master: will publish" >> $GITHUB_STEP_SUMMARY
          else
            echo "publish=false" >> $GITHUB_OUTPUT
            echo "Tag does not point to master; skipping publish." >> $GITHUB_STEP_SUMMARY
          fi

      - name: Use Node.js
        if: ${{ steps.elig.outputs.publish == 'true' }}
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          registry-url: 'https://registry.npmjs.org'
          scope: '@zoomiit'
          always-auth: true

      - name: Configure npm auth
        if: ${{ steps.elig.outputs.publish == 'true' }}
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc
          
      - name: Set up pnpm
        if: ${{ steps.elig.outputs.publish == 'true' }}
        uses: pnpm/action-setup@v3
        with:
          version: 8
      - name: Install
        if: ${{ steps.elig.outputs.publish == 'true' }}
        run: pnpm install

      - name: Publish package
        if: ${{ steps.elig.outputs.publish == 'true' }}
        run: pnpm publish --no-git-checks

      - name: Verify published version
        if: ${{ steps.elig.outputs.publish == 'true' }}
        run: |
          NAME=$(node -p "require('./package.json').name")
          VERSION=$(node -p "require('./package.json').version")
          PUBLISHED=$(npm view "$NAME" version || true)
          echo "Published package: $NAME" >> $GITHUB_STEP_SUMMARY
          echo "Package.json version: $VERSION" >> $GITHUB_STEP_SUMMARY
          echo "npm registry version: $PUBLISHED" >> $GITHUB_STEP_SUMMARY
          if [ "$PUBLISHED" != "$VERSION" ]; then
            echo "Warning: registry version does not match package.json (propagation delay or publish failed)." >> $GITHUB_STEP_SUMMARY
          else
            echo "Publish verified successfully." >> $GITHUB_STEP_SUMMARY
          fi
